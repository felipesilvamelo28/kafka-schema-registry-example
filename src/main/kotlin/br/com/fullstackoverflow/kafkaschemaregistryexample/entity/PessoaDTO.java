/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package br.com.fullstackoverflow.kafkaschemaregistryexample.entity;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PessoaDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7885625894551015737L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PessoaDTO\",\"namespace\":\"br.com.fullstackoverflow.kafkaschemaregistryexample.entity\",\"fields\":[{\"name\":\"nome\",\"type\":\"string\"},{\"name\":\"sobrenome\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<PessoaDTO> ENCODER =
      new BinaryMessageEncoder<PessoaDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<PessoaDTO> DECODER =
      new BinaryMessageDecoder<PessoaDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<PessoaDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<PessoaDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<PessoaDTO>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this PessoaDTO to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a PessoaDTO from a ByteBuffer. */
  public static PessoaDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public java.lang.CharSequence nome;
  @Deprecated public java.lang.CharSequence sobrenome;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public PessoaDTO() {}

  /**
   * All-args constructor.
   * @param nome The new value for nome
   * @param sobrenome The new value for sobrenome
   */
  public PessoaDTO(java.lang.CharSequence nome, java.lang.CharSequence sobrenome) {
    this.nome = nome;
    this.sobrenome = sobrenome;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return nome;
    case 1: return sobrenome;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: nome = (java.lang.CharSequence)value$; break;
    case 1: sobrenome = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'nome' field.
   * @return The value of the 'nome' field.
   */
  public java.lang.CharSequence getNome() {
    return nome;
  }

  /**
   * Sets the value of the 'nome' field.
   * @param value the value to set.
   */
  public void setNome(java.lang.CharSequence value) {
    this.nome = value;
  }

  /**
   * Gets the value of the 'sobrenome' field.
   * @return The value of the 'sobrenome' field.
   */
  public java.lang.CharSequence getSobrenome() {
    return sobrenome;
  }

  /**
   * Sets the value of the 'sobrenome' field.
   * @param value the value to set.
   */
  public void setSobrenome(java.lang.CharSequence value) {
    this.sobrenome = value;
  }

  /**
   * Creates a new PessoaDTO RecordBuilder.
   * @return A new PessoaDTO RecordBuilder
   */
  public static br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder newBuilder() {
    return new br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder();
  }

  /**
   * Creates a new PessoaDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new PessoaDTO RecordBuilder
   */
  public static br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder newBuilder(br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder other) {
    return new br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder(other);
  }

  /**
   * Creates a new PessoaDTO RecordBuilder by copying an existing PessoaDTO instance.
   * @param other The existing instance to copy.
   * @return A new PessoaDTO RecordBuilder
   */
  public static br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder newBuilder(br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO other) {
    return new br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder(other);
  }

  /**
   * RecordBuilder for PessoaDTO instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PessoaDTO>
    implements org.apache.avro.data.RecordBuilder<PessoaDTO> {

    private java.lang.CharSequence nome;
    private java.lang.CharSequence sobrenome;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.nome)) {
        this.nome = data().deepCopy(fields()[0].schema(), other.nome);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sobrenome)) {
        this.sobrenome = data().deepCopy(fields()[1].schema(), other.sobrenome);
        fieldSetFlags()[1] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing PessoaDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.nome)) {
        this.nome = data().deepCopy(fields()[0].schema(), other.nome);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sobrenome)) {
        this.sobrenome = data().deepCopy(fields()[1].schema(), other.sobrenome);
        fieldSetFlags()[1] = true;
      }
    }

    /**
      * Gets the value of the 'nome' field.
      * @return The value.
      */
    public java.lang.CharSequence getNome() {
      return nome;
    }

    /**
      * Sets the value of the 'nome' field.
      * @param value The value of 'nome'.
      * @return This builder.
      */
    public br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder setNome(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.nome = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'nome' field has been set.
      * @return True if the 'nome' field has been set, false otherwise.
      */
    public boolean hasNome() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'nome' field.
      * @return This builder.
      */
    public br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder clearNome() {
      nome = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sobrenome' field.
      * @return The value.
      */
    public java.lang.CharSequence getSobrenome() {
      return sobrenome;
    }

    /**
      * Sets the value of the 'sobrenome' field.
      * @param value The value of 'sobrenome'.
      * @return This builder.
      */
    public br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder setSobrenome(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.sobrenome = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sobrenome' field has been set.
      * @return True if the 'sobrenome' field has been set, false otherwise.
      */
    public boolean hasSobrenome() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sobrenome' field.
      * @return This builder.
      */
    public br.com.fullstackoverflow.kafkaschemaregistryexample.entity.PessoaDTO.Builder clearSobrenome() {
      sobrenome = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public PessoaDTO build() {
      try {
        PessoaDTO record = new PessoaDTO();
        record.nome = fieldSetFlags()[0] ? this.nome : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.sobrenome = fieldSetFlags()[1] ? this.sobrenome : (java.lang.CharSequence) defaultValue(fields()[1]);
        return record;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<PessoaDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<PessoaDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<PessoaDTO>
    READER$ = (org.apache.avro.io.DatumReader<PessoaDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
